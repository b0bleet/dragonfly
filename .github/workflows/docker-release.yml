name: docker release

on:
  workflow_dispatch:
    inputs:
      TAG_NAME:
        description: 'Tag name that the major tag will point to'
        required: true
      PRERELEASE:
        description: 'Whether this is a prerelease'
        type: boolean
        required: true

  release:
    types: [published]

permissions:
  packages: write
  contents: write
  id-token: write

env:
  TAG_NAME: ${{ github.event.inputs.TAG_NAME || github.event.release.tag_name }}
  IS_PRERELEASE: ${{ github.event.release.prerelease || github.event.inputs.PRERELEASE }}

jobs:
# ===============================================================
#   Building Dev Images
# ===============================================================
  release:
    runs-on: ubuntu-latest
    steps:
    - name: print_env
      run: env

    - name: checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Install helm
      uses: azure/setup-helm@v3

    - uses: dsaltares/fetch-gh-release-asset@master
      with:
        version: 'tags/${{ env.TAG_NAME }}'
        regex: true
        file: "dragonfly-.*\\.tar\\.gz"
        target: 'releases/'
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Set up QEMU
      id: qemu
      uses: docker/setup-qemu-action@v1
      with:
          platforms: arm64,amd64

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract artifacts
      run: |
        echo "Event prerelease ${{ github.event.release.prerelease }}"
        echo "Input prerelease ${{ github.event.inputs.PRERELEASE }}"
        ls -l
        ls -l releases
        for f in releases/*.tar.gz; do tar xvfz $f -C releases; done
        rm releases/*.tar.gz

    - name: Build release image
      if: env.IS_PRERELEASE != 'true'
      uses: docker/build-push-action@v3
      with:
        context: .
        platforms: linux/amd64,linux/arm64

        # Define QEMU settings inside the builder
        build-args: |
          QEMU_CPU=max,pauth-impdef=on

        push: ${{ github.event_name != 'pull_request' }}
        tags: |
          ghcr.io/${{ github.repository }}:ubuntu
          ghcr.io/${{ github.repository }}:latest
          ghcr.io/${{ github.repository }}:${{ env.TAG_NAME }}
          ghcr.io/${{ github.repository }}:${{ env.TAG_NAME }}-ubuntu

        file: tools/docker/Dockerfile.ubuntu-prod
        cache-from: type=registry,ref=${{ github.repository }}:latest
        cache-to: type=inline

    - name: Build pre-release image
      if: env.IS_PRERELEASE == 'true'
      uses: docker/build-push-action@v3
      with:
        context: .
        platforms: linux/amd64,linux/arm64

        push: ${{ github.event_name != 'pull_request' }}
        tags: |
          ghcr.io/${{ github.repository }}:alpha
          ghcr.io/${{ github.repository }}:${{ env.TAG_NAME }}
        file: tools/docker/Dockerfile.ubuntu-prod
        cache-from: type=registry,ref=${{ github.repository }}:latest
        cache-to: type=inline

    - name: Configure Git
      if: env.IS_PRERELEASE != 'true'
      run: |
        git config user.name "$GITHUB_ACTOR"
        git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

    - name: Update helm chart
      if: env.IS_PRERELEASE != 'true'
      run: |
        git checkout main
        sed -Ei \
            -e 's/^(version\:) .*/\1 '${{ env.TAG_NAME }}'/g' \
            -e 's/^(appVersion\:) .*/\1 "'${{ env.TAG_NAME }}'"/g' \
            contrib/charts/dragonfly/Chart.yaml

        git commit \
          -m 'chore(helm-chart): update to ${{ env.TAG_NAME }}' \
          contrib/charts/dragonfly/Chart.yaml

    - name: Push Helm chart as OCI to Github
      if: env.IS_PRERELEASE != 'true'
      run: |
        echo "${{ secrets.GITHUB_TOKEN }}" | \
          helm registry login -u ${{ github.actor }} --password-stdin ghcr.io

        helm package contrib/charts/dragonfly

        helm push dragonfly-${{ env.TAG_NAME }}.tgz oci://ghcr.io/${{ github.repository }}/helm

    - name: GitHub Push
      uses: CasperWA/push-protected@v2
      with:
        token: ${{ secrets.DRAGONFLY_TOKEN }}
        branch: main

    - name: Discord notification
      env:
        DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
      uses: Ilshidur/action-discord@0c4b27844ba47cb1c7bee539c8eead5284ce9fa9
      with:
        args: 'DragonflyDB version [${{ env.TAG_NAME }}](https://github.com/dragonflydb/dragonfly/releases/tag/${{ env.TAG_NAME }}) has been released ðŸŽ‰'
